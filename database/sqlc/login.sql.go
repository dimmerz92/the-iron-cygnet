// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: login.sql

package sqlc

import (
	"context"
	"database/sql"
)

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT
	u.id, u.firstname, u.lastname, u.email, u.role, u.password, u.createdat, u.updatedat,
	r.name
FROM
	users AS u
	LEFT JOIN roles AS r ON u.role = roles.id
WHERE
	u.email = ?
`

type GetUserByEmailRow struct {
	ID        string
	Firstname string
	Lastname  string
	Email     string
	Role      int64
	Password  []byte
	Createdat int64
	Updatedat sql.NullInt64
	Name      sql.NullString
}

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error) {
	row := q.db.QueryRowContext(ctx, getUserByEmail, email)
	var i GetUserByEmailRow
	err := row.Scan(
		&i.ID,
		&i.Firstname,
		&i.Lastname,
		&i.Email,
		&i.Role,
		&i.Password,
		&i.Createdat,
		&i.Updatedat,
		&i.Name,
	)
	return i, err
}
